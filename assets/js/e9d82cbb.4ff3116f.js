"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2970],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>u});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=p(r),u=o,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||a;return r?n.createElement(f,i(i({ref:t},l),{},{components:r})):n.createElement(f,i({ref:t},l))}));function u(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3075:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={},i="@project",c={unversionedId:"api/flow-decorators/project",id:"api/flow-decorators/project",title:"@project",description:"The @project decorator makes it convenient to create isolated Metaflow namespaces and",source:"@site/docs/api/flow-decorators/project.md",sourceDirName:"api/flow-decorators",slug:"/api/flow-decorators/project",permalink:"/api/flow-decorators/project",draft:!1,editUrl:"https://github.dev/Netflix/metaflow-docs/blob/master/docs/api/flow-decorators/project.md",tags:[],version:"current",frontMatter:{},sidebar:"python",previous:{title:"@conda_base",permalink:"/api/flow-decorators/conda_base"},next:{title:"@schedule",permalink:"/api/flow-decorators/schedule"}},s={},p=[],l=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},d=l("DocSection"),m=l("SigArgSection"),u=l("SigArg"),f=l("Description"),h=l("ParamSection"),y=l("Parameter"),b={toc:p};function g(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},b,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"project"},"@project"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@project")," decorator makes it convenient to create isolated ",(0,o.kt)("a",{parentName:"p",href:"/scaling/tagging"},"Metaflow namespaces")," and\ncorresponding ",(0,o.kt)("a",{parentName:"p",href:"/production/scheduling-metaflow-flows/introduction"},"proudction deployments"),". When\nmultiple flows use the same project name, they can fetch data across them safely using ",(0,o.kt)("a",{parentName:"p",href:"/metaflow/client"},"the Client API"),", without interference from other users running the same flows."),(0,o.kt)("p",null,"By itself, ",(0,o.kt)("inlineCode",{parentName:"p"},"@project")," doesn't change the behavior besides ",(0,o.kt)("a",{parentName:"p",href:"/api/current#project"},"exposing new attributes in the ",(0,o.kt)("inlineCode",{parentName:"a"},"current")," object"),". It alters the flow names when they are deployed in production, allowing multiple parallel deployments."),(0,o.kt)("p",null,"For more information, see ",(0,o.kt)("a",{parentName:"p",href:"/production/coordinating-larger-metaflow-projects"},"Coordinating Larger Metaflow Projects"),"."),(0,o.kt)(d,{type:"decorator",name:"project",module:"metaflow",show_import:"True",heading_level:"3",link:"https://github.com/Netflix/metaflow/tree/master/metaflow/plugins/project_decorator.py#L15",mdxType:"DocSection"},(0,o.kt)(m,{mdxType:"SigArgSection"},(0,o.kt)(u,{name:"...",mdxType:"SigArg"})),(0,o.kt)(f,{summary:"Specifies what flows belong to the same project.",extended_summary:"A project-specific namespace is created for all flows that\\nuse the same `@project(name)`.",mdxType:"Description"}),(0,o.kt)(h,{name:"Parameters",mdxType:"ParamSection"},(0,o.kt)(y,{name:"name",type:"str",desc:"Project name. Make sure that the name is unique amongst all\\nprojects that use the same production scheduler. The name may\\ncontain only lowercase alphanumeric characters and underscores.",mdxType:"Parameter"}),(0,o.kt)(y,{name:"branch",type:"Optional[str], default None",desc:"The branch to use. If not specified, the branch is set to\\n`user.<username>` unless `production` is set to `True`. This can\\nalso be set on the command line using `--branch` as a top-level option.\\nIt is an error to specify `branch` in the decorator and on the command line.",mdxType:"Parameter"}),(0,o.kt)(y,{name:"production",type:"bool, default False",desc:"Whether or not the branch is the production branch. This can also be set on the\\ncommand line using `--production` as a top-level option. It is an error to specify\\n`production` in the decorator and on the command line.\\nThe project branch name will be:\\n  - if `branch` is specified:\\n    - if `production` is True: `prod.<branch>`\\n    - if `production` is False: `test.<branch>`\\n  - if `branch` is not specified:\\n    - if `production` is True: `prod`\\n    - if `production` is False: `user.<username>`",mdxType:"Parameter"}))))}g.isMDXComponent=!0}}]);