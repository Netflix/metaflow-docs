"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"python":[{"type":"link","label":"Welcome to Metaflow","href":"/","docId":"index"},{"type":"category","label":"Introduction","items":[{"type":"link","label":"Why Metaflow","href":"/introduction/why-metaflow","docId":"introduction/why-metaflow"},{"type":"link","label":"What is Metaflow","href":"/introduction/what-is-metaflow","docId":"introduction/what-is-metaflow"},{"type":"link","label":"Metaflow Resources","href":"/introduction/metaflow-resources","docId":"introduction/metaflow-resources"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Installing Metaflow","href":"/getting-started/install","docId":"getting-started/install"},{"type":"link","label":"Setting Up the Dev Stack","href":"/getting-started/devstack","docId":"getting-started/devstack"},{"type":"link","label":"Deploying Infrastructure for Metaflow","href":"/getting-started/infrastructure","docId":"getting-started/infrastructure"},{"type":"category","label":"Tutorials","items":[{"type":"category","label":"Season 1: The Local Experience","items":[{"type":"link","label":"Episode 0: Hello World","href":"/getting-started/tutorials/season-1-the-local-experience/episode00","docId":"getting-started/tutorials/season-1-the-local-experience/episode00"},{"type":"link","label":"Episode 1: Playlist","href":"/getting-started/tutorials/season-1-the-local-experience/episode01","docId":"getting-started/tutorials/season-1-the-local-experience/episode01"},{"type":"link","label":"Episode 2: Statistics","href":"/getting-started/tutorials/season-1-the-local-experience/episode02","docId":"getting-started/tutorials/season-1-the-local-experience/episode02"},{"type":"link","label":"Episode 3: Playlist Redux","href":"/getting-started/tutorials/season-1-the-local-experience/episode03","docId":"getting-started/tutorials/season-1-the-local-experience/episode03"},{"type":"link","label":"Episode 4: Playlist Plus","href":"/getting-started/tutorials/season-1-the-local-experience/episode04","docId":"getting-started/tutorials/season-1-the-local-experience/episode04"}],"collapsed":true,"collapsible":true,"href":"/getting-started/tutorials/season-1-the-local-experience/"},{"type":"category","label":"Season 2: Scaling Out and Up","items":[{"type":"link","label":"Episode 5: Hello Cloud","href":"/getting-started/tutorials/season-2-scaling-out-and-up/episode05","docId":"getting-started/tutorials/season-2-scaling-out-and-up/episode05"},{"type":"link","label":"Episode 6: Statistics Redux","href":"/getting-started/tutorials/season-2-scaling-out-and-up/episode06","docId":"getting-started/tutorials/season-2-scaling-out-and-up/episode06"},{"type":"link","label":"Episode 7: Worldview","href":"/getting-started/tutorials/season-2-scaling-out-and-up/episode07","docId":"getting-started/tutorials/season-2-scaling-out-and-up/episode07"},{"type":"link","label":"Episode 8: Autopilot","href":"/getting-started/tutorials/season-2-scaling-out-and-up/episode08","docId":"getting-started/tutorials/season-2-scaling-out-and-up/episode08"}],"collapsed":true,"collapsible":true,"href":"/getting-started/tutorials/season-2-scaling-out-and-up/"}],"collapsed":true,"collapsible":true,"href":"/getting-started/tutorials/"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Developing Flows","items":[{"type":"link","label":"Creating Flows","href":"/metaflow/basics","docId":"metaflow/basics"},{"type":"link","label":"Inspecting Flows and Results","href":"/metaflow/client","docId":"metaflow/client"},{"type":"category","label":"Managing Flows","items":[{"type":"link","label":"Running in a Notebook","href":"/metaflow/managing-flows/notebook-runs","docId":"metaflow/managing-flows/notebook-runs"},{"type":"link","label":"Running Flows Programmatically","href":"/metaflow/managing-flows/runner","docId":"metaflow/managing-flows/runner"},{"type":"link","label":"Deploying Flows Programmatically","href":"/metaflow/managing-flows/deployer","docId":"metaflow/managing-flows/deployer"}],"collapsed":true,"collapsible":true,"href":"/metaflow/managing-flows/introduction"},{"type":"link","label":"Debugging Flows","href":"/metaflow/debugging","docId":"metaflow/debugging"},{"type":"category","label":"Visualizing Results","items":[{"type":"link","label":"Effortless Task Inspection with Default Cards","href":"/metaflow/visualizing-results/effortless-task-inspection-with-default-cards","docId":"metaflow/visualizing-results/effortless-task-inspection-with-default-cards"},{"type":"link","label":"Easy Custom Reports with Card Components","href":"/metaflow/visualizing-results/easy-custom-reports-with-card-components","docId":"metaflow/visualizing-results/easy-custom-reports-with-card-components"},{"type":"link","label":"Updating Cards During Task Execution","href":"/metaflow/visualizing-results/dynamic-cards","docId":"metaflow/visualizing-results/dynamic-cards"},{"type":"link","label":"Advanced, Shareable Cards with Card Templates","href":"/metaflow/visualizing-results/advanced-shareable-cards-with-card-templates","docId":"metaflow/visualizing-results/advanced-shareable-cards-with-card-templates"}],"collapsed":true,"collapsible":true,"href":"/metaflow/visualizing-results/"},{"type":"category","label":"Configuring Flows","items":[{"type":"link","label":"Basic Configuration","href":"/metaflow/configuring-flows/basic-configuration","docId":"metaflow/configuring-flows/basic-configuration"},{"type":"link","label":"Parsing Configs","href":"/metaflow/configuring-flows/parsing-configs","docId":"metaflow/configuring-flows/parsing-configs"},{"type":"link","label":"Custom Config Parsers","href":"/metaflow/configuring-flows/custom-parsers","docId":"metaflow/configuring-flows/custom-parsers"},{"type":"link","label":"Config-Driven Experimentation","href":"/metaflow/configuring-flows/config-driven-experimentation","docId":"metaflow/configuring-flows/config-driven-experimentation"}],"collapsed":true,"collapsible":true,"href":"/metaflow/configuring-flows/introduction"}],"collapsed":true,"collapsible":true,"href":"/metaflow/introduction"},{"type":"category","label":"Scaling Flows","items":[{"type":"category","label":"Computing at Scale","items":[{"type":"link","label":"Requesting Compute Resources","href":"/scaling/remote-tasks/requesting-resources","docId":"scaling/remote-tasks/requesting-resources"},{"type":"link","label":"Using Multiple CPU Cores","href":"/scaling/remote-tasks/multicore","docId":"scaling/remote-tasks/multicore"},{"type":"link","label":"Using Spot Instances","href":"/scaling/remote-tasks/spot-instances","docId":"scaling/remote-tasks/spot-instances"},{"type":"link","label":"Controlling Parallelism","href":"/scaling/remote-tasks/controlling-parallelism","docId":"scaling/remote-tasks/controlling-parallelism"},{"type":"link","label":"Using GPUs and Other Accelerators","href":"/scaling/remote-tasks/gpu-compute","docId":"scaling/remote-tasks/gpu-compute"},{"type":"link","label":"Installing Drivers and Frameworks","href":"/scaling/remote-tasks/installing-drivers-and-frameworks","docId":"scaling/remote-tasks/installing-drivers-and-frameworks"},{"type":"link","label":"Distributed Computing","href":"/scaling/remote-tasks/distributed-computing","docId":"scaling/remote-tasks/distributed-computing"},{"type":"link","label":"Using Kubernetes","href":"/scaling/remote-tasks/kubernetes","docId":"scaling/remote-tasks/kubernetes"},{"type":"link","label":"Using AWS Batch","href":"/scaling/remote-tasks/aws-batch","docId":"scaling/remote-tasks/aws-batch"}],"collapsed":true,"collapsible":true,"href":"/scaling/remote-tasks/introduction"},{"type":"category","label":"Managing Dependencies","items":[{"type":"link","label":"Structuring Projects","href":"/scaling/dependencies/project-structure","docId":"scaling/dependencies/project-structure"},{"type":"link","label":"Managing Libraries","href":"/scaling/dependencies/libraries","docId":"scaling/dependencies/libraries"},{"type":"link","label":"Using uv","href":"/scaling/dependencies/uv","docId":"scaling/dependencies/uv"},{"type":"link","label":"Conda vs. PyPI","href":"/scaling/dependencies/conda-vs-pypi","docId":"scaling/dependencies/conda-vs-pypi"},{"type":"link","label":"Defining Custom Images","href":"/scaling/dependencies/containers","docId":"scaling/dependencies/containers"},{"type":"link","label":"Internals of Dependency Management","href":"/scaling/dependencies/internals","docId":"scaling/dependencies/internals"},{"type":"link","label":"Dependencies FAQ","href":"/scaling/dependencies/faq","docId":"scaling/dependencies/faq"}],"collapsed":true,"collapsible":true,"href":"/scaling/dependencies/"},{"type":"link","label":"Dealing with Failures","href":"/scaling/failures","docId":"scaling/failures"},{"type":"category","label":"Checkpointing Progress","items":[{"type":"link","label":"Checkpoints in ML/AI libraries","href":"/scaling/checkpoint/checkpoint-ml-libraries","docId":"scaling/checkpoint/checkpoint-ml-libraries"},{"type":"link","label":"Selecting a Checkpoint to Use","href":"/scaling/checkpoint/selecting-checkpoints","docId":"scaling/checkpoint/selecting-checkpoints"}],"collapsed":true,"collapsible":true,"href":"/scaling/checkpoint/introduction"},{"type":"link","label":"Loading and Storing Data","href":"/scaling/data","docId":"scaling/data"},{"type":"link","label":"Organizing Results","href":"/scaling/tagging","docId":"scaling/tagging"},{"type":"link","label":"Accessing Secrets","href":"/scaling/secrets","docId":"scaling/secrets"}],"collapsed":true,"collapsible":true,"href":"/scaling/introduction"},{"type":"category","label":"Deploying to Production","items":[{"type":"category","label":"Scheduling Metaflow Flows","items":[{"type":"link","label":"Scheduling Metaflow Flows with Argo Workflows","href":"/production/scheduling-metaflow-flows/scheduling-with-argo-workflows","docId":"production/scheduling-metaflow-flows/scheduling-with-argo-workflows"},{"type":"link","label":"Scheduling Metaflow Flows with AWS Step Functions","href":"/production/scheduling-metaflow-flows/scheduling-with-aws-step-functions","docId":"production/scheduling-metaflow-flows/scheduling-with-aws-step-functions"},{"type":"link","label":"Scheduling Metaflow Flows with Apache Airflow","href":"/production/scheduling-metaflow-flows/scheduling-with-airflow","docId":"production/scheduling-metaflow-flows/scheduling-with-airflow"}],"collapsed":true,"collapsible":true,"href":"/production/scheduling-metaflow-flows/introduction"},{"type":"link","label":"Coordinating Larger Metaflow Projects","href":"/production/coordinating-larger-metaflow-projects","docId":"production/coordinating-larger-metaflow-projects"},{"type":"category","label":"Connecting Flows via Events","items":[{"type":"link","label":"Triggering Flows Based on External Events","href":"/production/event-triggering/external-events","docId":"production/event-triggering/external-events"},{"type":"link","label":"Triggering Flows Based on Other Flows","href":"/production/event-triggering/flow-events","docId":"production/event-triggering/flow-events"},{"type":"link","label":"Inspecting Events","href":"/production/event-triggering/inspect-events","docId":"production/event-triggering/inspect-events"},{"type":"link","label":"Deploying Variants of Event-Triggered Flows","href":"/production/event-triggering/project-events","docId":"production/event-triggering/project-events"}],"collapsed":true,"collapsible":true,"href":"/production/event-triggering/"}],"collapsed":true,"collapsible":true,"href":"/production/introduction"},{"type":"category","label":"API Reference","items":[{"type":"link","label":"Client API - Accessing past results","href":"/api/client","docId":"api/client"},{"type":"link","label":"FlowSpec - Constructing flows","href":"/api/flowspec","docId":"api/flowspec"},{"type":"link","label":"Current - Operating a run","href":"/api/current","docId":"api/current"},{"type":"link","label":"Runner - Running flows programmatically","href":"/api/runner","docId":"api/runner"},{"type":"link","label":"Deployer - Deploying flows programmatically","href":"/api/deployer","docId":"api/deployer"},{"type":"link","label":"S3 - Accessing data in S3 quickly","href":"/api/S3","docId":"api/S3"},{"type":"link","label":"Cards - Visualizing results","href":"/api/cards","docId":"api/cards"},{"type":"link","label":"ArgoEvent - Create events to trigger flows","href":"/api/argoevent","docId":"api/argoevent"},{"type":"category","label":"Step Decorators","items":[{"type":"link","label":"@environment","href":"/api/step-decorators/environment","docId":"api/step-decorators/environment"},{"type":"link","label":"@batch","href":"/api/step-decorators/batch","docId":"api/step-decorators/batch"},{"type":"link","label":"@card","href":"/api/step-decorators/card","docId":"api/step-decorators/card"},{"type":"link","label":"@catch","href":"/api/step-decorators/catch","docId":"api/step-decorators/catch"},{"type":"link","label":"@conda","href":"/api/step-decorators/conda","docId":"api/step-decorators/conda"},{"type":"link","label":"@pypi","href":"/api/step-decorators/pypi","docId":"api/step-decorators/pypi"},{"type":"link","label":"@kubernetes","href":"/api/step-decorators/kubernetes","docId":"api/step-decorators/kubernetes"},{"type":"link","label":"@resources","href":"/api/step-decorators/resources","docId":"api/step-decorators/resources"},{"type":"link","label":"@retry","href":"/api/step-decorators/retry","docId":"api/step-decorators/retry"},{"type":"link","label":"@secrets","href":"/api/step-decorators/secrets","docId":"api/step-decorators/secrets"},{"type":"link","label":"@step","href":"/api/step-decorators/step","docId":"api/step-decorators/step"},{"type":"link","label":"@timeout","href":"/api/step-decorators/timeout","docId":"api/step-decorators/timeout"}],"collapsed":true,"collapsible":true,"href":"/api/step-decorators/"},{"type":"category","label":"Flow Decorators","items":[{"type":"link","label":"@conda_base","href":"/api/flow-decorators/conda_base","docId":"api/flow-decorators/conda_base"},{"type":"link","label":"@project","href":"/api/flow-decorators/project","docId":"api/flow-decorators/project"},{"type":"link","label":"@schedule","href":"/api/flow-decorators/schedule","docId":"api/flow-decorators/schedule"},{"type":"link","label":"@trigger","href":"/api/flow-decorators/trigger","docId":"api/flow-decorators/trigger"},{"type":"link","label":"@trigger_on_finish","href":"/api/flow-decorators/trigger_on_finish","docId":"api/flow-decorators/trigger_on_finish"}],"collapsed":true,"collapsible":true,"href":"/api/flow-decorators/"}],"collapsed":true,"collapsible":true,"href":"/api/"},{"type":"category","label":"Internals of Metaflow","items":[{"type":"link","label":"Release Notes","href":"/internals/release-notes","docId":"internals/release-notes"},{"type":"link","label":"Technical Overview","href":"/internals/technical-overview","docId":"internals/technical-overview"},{"type":"link","label":"Testing Philosophy","href":"/internals/testing-philosophy","docId":"internals/testing-philosophy"},{"type":"link","label":"Contributing to Metaflow","href":"/internals/contributing","docId":"internals/contributing"}],"collapsed":true,"collapsible":true}],"r":[{"type":"link","label":"Welcome to Metaflow for R","href":"/v/r/","docId":"v/r/README"},{"type":"category","label":"Introduction","items":[{"type":"link","label":"Why Metaflow","href":"/v/r/introduction/why-metaflow","docId":"v/r/introduction/why-metaflow"},{"type":"link","label":"What is Metaflow","href":"/v/r/introduction/what-is-metaflow","docId":"v/r/introduction/what-is-metaflow"},{"type":"link","label":"Release Notes","href":"/v/r/introduction/release-notes","docId":"v/r/introduction/release-notes"},{"type":"link","label":"Contributing to Metaflow","href":"/v/r/introduction/contributing-to-metaflow","docId":"v/r/introduction/contributing-to-metaflow"},{"type":"link","label":"Get in Touch","href":"/v/r/introduction/getting-in-touch","docId":"v/r/introduction/getting-in-touch"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Installing Metaflow","href":"/v/r/getting-started/install","docId":"v/r/getting-started/install"},{"type":"link","label":"Development Environment","href":"/v/r/getting-started/development-environment","docId":"v/r/getting-started/development-environment"},{"type":"category","label":"Tutorials","items":[{"type":"category","label":"Season 1: The Local Experience","items":[{"type":"link","label":"Episode 0: Hello World","href":"/v/r/getting-started/tutorials/season-1-the-local-experience/episode00","docId":"v/r/getting-started/tutorials/season-1-the-local-experience/episode00"},{"type":"link","label":"Episode 1: Playlist","href":"/v/r/getting-started/tutorials/season-1-the-local-experience/episode01","docId":"v/r/getting-started/tutorials/season-1-the-local-experience/episode01"},{"type":"link","label":"Episode 2: Statistics","href":"/v/r/getting-started/tutorials/season-1-the-local-experience/episode02","docId":"v/r/getting-started/tutorials/season-1-the-local-experience/episode02"},{"type":"link","label":"Episode 3: Playlist Redux","href":"/v/r/getting-started/tutorials/season-1-the-local-experience/episode03","docId":"v/r/getting-started/tutorials/season-1-the-local-experience/episode03"}],"collapsed":true,"collapsible":true,"href":"/v/r/getting-started/tutorials/season-1-the-local-experience/"},{"type":"category","label":"Season 2: Scaling Out and Up","items":[{"type":"link","label":"Episode 4: Hello AWS","href":"/v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode04","docId":"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode04"},{"type":"link","label":"Episode 5: Statistics Redux","href":"/v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode05","docId":"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode05"},{"type":"link","label":"Episode 6: Worldview","href":"/v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode06","docId":"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode06"}],"collapsed":true,"collapsible":true,"href":"/v/r/getting-started/tutorials/season-2-scaling-out-and-up/"}],"collapsed":true,"collapsible":true,"href":"/v/r/getting-started/tutorials/"}],"collapsed":true,"collapsible":true}]},"docs":{"api/argoevent":{"id":"api/argoevent","title":"ArgoEvent - Create events to trigger flows","description":"This class is mainly used outside Metaflow flows to create events that trigger Metaflow flows. For instance,","sidebar":"python"},"api/cards":{"id":"api/cards","title":"Cards - Visualizing results","description":"Metaflow Cards allows you to produce human readable reports in workflows and observe their behavior live. Use the following APIs to enable, customize, and access cards:","sidebar":"python"},"api/client":{"id":"api/client","title":"Client API - Accessing past results","description":"Use these objects to access data from past runs and to manipulate tags. Objects in this module are organized as a hierarchy:","sidebar":"python"},"api/current":{"id":"api/current","title":"Current - Operating a run","description":"The current object is used to inspect and manipulate the currently executing run. It is only available during flow execution, i.e. inside a FlowSpec class and functions called from its steps. You can access the object simply by importing it: from metaflow import current.","sidebar":"python"},"api/deployer":{"id":"api/deployer","title":"Deployer - Deploying flows programmatically","description":"The Deployer class allows you to manage production deployments programmatically. For an overview, see Deploying flows programmatically.","sidebar":"python"},"api/flow-decorators/conda_base":{"id":"api/flow-decorators/conda_base","title":"@conda_base","description":"The @conda_base decorator specifies what libraries should be made available for all steps of a flow.","sidebar":"python"},"api/flow-decorators/project":{"id":"api/flow-decorators/project","title":"@project","description":"The @project decorator makes it convenient to create isolated Metaflow namespaces and","sidebar":"python"},"api/flow-decorators/README":{"id":"api/flow-decorators/README","title":"Flow Decorators","description":"These decorators are set at the flow level, i.e. above the class definition. In contrast to step decorators, they can\'t be attached on the command line using --with.","sidebar":"python"},"api/flow-decorators/schedule":{"id":"api/flow-decorators/schedule","title":"@schedule","description":"The @schedule decorator specifies the times when the flow should be run when deployed to an external orchestrator like AWS Step Functions or Argo Workflows.","sidebar":"python"},"api/flow-decorators/trigger":{"id":"api/flow-decorators/trigger","title":"@trigger","description":"Use the @trigger decorator to trigger a flow deployed on Argo Workflows based on an external event.","sidebar":"python"},"api/flow-decorators/trigger_on_finish":{"id":"api/flow-decorators/trigger_on_finish","title":"@trigger_on_finish","description":"Use the @triggeronfinish decorator to trigger a flow deployed on Argo Workflows when another flow finishes.","sidebar":"python"},"api/flowspec":{"id":"api/flowspec","title":"FlowSpec - Constructing flows","description":"Metaflow flows are defined by inhering from the FlowSpec class:","sidebar":"python"},"api/README":{"id":"api/README","title":"Metaflow API reference","description":"These pages document the public API of Metaflow.","sidebar":"python"},"api/runner":{"id":"api/runner","title":"Runner - Running flows programmatically","description":"The Runner class and its notebook-focused counterpart NBRunner allow you to start runs and resume them programmatically. For an overview, see Managing Flows in Notebooks and Scripts.","sidebar":"python"},"api/S3":{"id":"api/S3","title":"S3 - Accessing data in S3 quickly","description":"The S3 client is a wrapper over the standard AWS Python library, boto. It contains enhancements that are relevant for data-intensive applications:","sidebar":"python"},"api/step-decorators/batch":{"id":"api/step-decorators/batch","title":"@batch","description":"The @batch decorator sends a step for execution on the AWS Batch compute layer. For more information, see Executing Tasks Remotely.","sidebar":"python"},"api/step-decorators/card":{"id":"api/step-decorators/card","title":"@card","description":"Creates a report card after the step completes. For more information, see Visualizing Results and the main API docs for cards.","sidebar":"python"},"api/step-decorators/catch":{"id":"api/step-decorators/catch","title":"@catch","description":"The @catch decorator ensures that a step will succeed, despite any errors in the user code or transient platform issues.","sidebar":"python"},"api/step-decorators/conda":{"id":"api/step-decorators/conda","title":"@conda","description":"The @conda decorator specifies what libraries should be made available for a step.","sidebar":"python"},"api/step-decorators/environment":{"id":"api/step-decorators/environment","title":"@environment","description":"The @environment decorator specifies environment variables for a step.","sidebar":"python"},"api/step-decorators/kubernetes":{"id":"api/step-decorators/kubernetes","title":"@kubernetes","description":"The @kubernetes decorator sends a step for execution on a Kubernetes cluster. For more information, see Executing Tasks Remotely.","sidebar":"python"},"api/step-decorators/pypi":{"id":"api/step-decorators/pypi","title":"@pypi","description":"The @pypi decorator specifies what packages should be made available for a step.","sidebar":"python"},"api/step-decorators/README":{"id":"api/step-decorators/README","title":"Step Decorators","description":"These decorators are set at the step level, i.e. above the @step","sidebar":"python"},"api/step-decorators/resources":{"id":"api/step-decorators/resources","title":"@resources","description":"The @resources decorator specifies resource requirements for a step.","sidebar":"python"},"api/step-decorators/retry":{"id":"api/step-decorators/retry","title":"@retry","description":"The @retry decorator specifies how many times the task(s) corresponding to a step should be retried before failing the flow.","sidebar":"python"},"api/step-decorators/secrets":{"id":"api/step-decorators/secrets","title":"@secrets","description":"The @secrets decorator allows you to access secrets, such as database credentials, securely from a secrets manager. For more details, see Accessing Secrets.","sidebar":"python"},"api/step-decorators/step":{"id":"api/step-decorators/step","title":"@step","description":"The @step decorator converts a method to a step of a flow.","sidebar":"python"},"api/step-decorators/timeout":{"id":"api/step-decorators/timeout","title":"@timeout","description":"The @timeout decorator specifies for how long a step should execute before it is interrupted.","sidebar":"python"},"getting-started/devstack":{"id":"getting-started/devstack","title":"Setting Up the Dev Stack","description":"You can start writing and running flows just by installing Metaflow locally with","sidebar":"python"},"getting-started/infrastructure":{"id":"getting-started/infrastructure","title":"Deploying Infrastructure for Metaflow","description":"Use the local dev stack to explore how Metaflow integrates","sidebar":"python"},"getting-started/install":{"id":"getting-started/install","title":"Installing Metaflow","description":"Metaflow is available as a Python package for macOS and Linux. You can visit our [GitHub","sidebar":"python"},"getting-started/tutorials/README":{"id":"getting-started/tutorials/README","title":"Tutorials","description":"This set of tutorials provides a hands-on introduction to Metaflow. The basic concepts","sidebar":"python"},"getting-started/tutorials/season-1-the-local-experience/episode00":{"id":"getting-started/tutorials/season-1-the-local-experience/episode00","title":"Episode 0: Hello World","description":"Metaflow says Hi!","sidebar":"python"},"getting-started/tutorials/season-1-the-local-experience/episode01":{"id":"getting-started/tutorials/season-1-the-local-experience/episode01","title":"Episode 1: Playlist","description":"Let\'s build you a movie playlist.","sidebar":"python"},"getting-started/tutorials/season-1-the-local-experience/episode02":{"id":"getting-started/tutorials/season-1-the-local-experience/episode02","title":"Episode 2: Statistics","description":"Is this Data Science?","sidebar":"python"},"getting-started/tutorials/season-1-the-local-experience/episode03":{"id":"getting-started/tutorials/season-1-the-local-experience/episode03","title":"Episode 3: Playlist Redux","description":"Follow the Money.","sidebar":"python"},"getting-started/tutorials/season-1-the-local-experience/episode04":{"id":"getting-started/tutorials/season-1-the-local-experience/episode04","title":"Episode 4: Playlist Plus","description":"The Final Showdown.","sidebar":"python"},"getting-started/tutorials/season-1-the-local-experience/README":{"id":"getting-started/tutorials/season-1-the-local-experience/README","title":"Season 1: The Local Experience","description":"This season focus on introducing the basics of Metaflow. You can run all these tutorials","sidebar":"python"},"getting-started/tutorials/season-2-scaling-out-and-up/episode05":{"id":"getting-started/tutorials/season-2-scaling-out-and-up/episode05","title":"Episode 5: Hello Cloud","description":"Look Mom, We\'re in the Cloud.","sidebar":"python"},"getting-started/tutorials/season-2-scaling-out-and-up/episode06":{"id":"getting-started/tutorials/season-2-scaling-out-and-up/episode06","title":"Episode 6: Statistics Redux","description":"Computing in the Cloud.","sidebar":"python"},"getting-started/tutorials/season-2-scaling-out-and-up/episode07":{"id":"getting-started/tutorials/season-2-scaling-out-and-up/episode07","title":"Episode 7: Worldview","description":"Way up here.","sidebar":"python"},"getting-started/tutorials/season-2-scaling-out-and-up/episode08":{"id":"getting-started/tutorials/season-2-scaling-out-and-up/episode08","title":"Episode 8: Autopilot","description":"Scheduling Compute in the Cloud.","sidebar":"python"},"getting-started/tutorials/season-2-scaling-out-and-up/README":{"id":"getting-started/tutorials/season-2-scaling-out-and-up/README","title":"Season 2: Scaling Out and Up","description":"This season introduces how to use Metaflow in the cloud. To run through these tutorials,","sidebar":"python"},"index":{"id":"index","title":"Welcome to Metaflow","description":"Build and manage real-life data science projects with ease.","sidebar":"python"},"internals/contributing":{"id":"internals/contributing","title":"Contributing to Metaflow","description":"First off, thanks for taking the time!","sidebar":"python"},"internals/release-notes":{"id":"internals/release-notes","title":"Release Notes","description":"We take backwards compatibility very seriously. In the vast majority of cases, you can","sidebar":"python"},"internals/technical-overview":{"id":"internals/technical-overview","title":"Technical Overview","description":"Make sure you have read Basics of Metaflow before diving into","sidebar":"python"},"internals/testing-philosophy":{"id":"internals/testing-philosophy","title":"Testing Philosophy","description":"Watch this talk for motivation: [Autonomous Testing and the Future of Software","sidebar":"python"},"introduction/metaflow-resources":{"id":"introduction/metaflow-resources","title":"Metaflow Resources","description":"Here\'s an incomplete overview of Metaflow resources outside this documentation. [Let us","sidebar":"python"},"introduction/what-is-metaflow":{"id":"introduction/what-is-metaflow","title":"What is Metaflow","description":"Metaflow is a human-friendly Python library that makes it straightforward to develop,","sidebar":"python"},"introduction/why-metaflow":{"id":"introduction/why-metaflow","title":"Why Metaflow","description":"1. Modern businesses are eager to utilize data science and ML","sidebar":"python"},"metaflow/basics":{"id":"metaflow/basics","title":"Creating Flows","description":"This document introduces the basic concepts of Metaflow. If you are eager to try out","sidebar":"python"},"metaflow/client":{"id":"metaflow/client","title":"Inspecting Flows and Results","description":"Metaflow provides a client API that is used to inspect results of past runs. It is","sidebar":"python"},"metaflow/configuring-flows/basic-configuration":{"id":"metaflow/configuring-flows/basic-configuration","title":"Basic Configuration","description":"You can find all Config examples in this repository.","sidebar":"python"},"metaflow/configuring-flows/config-driven-experimentation":{"id":"metaflow/configuring-flows/config-driven-experimentation","title":"Config-Driven Experimentation","description":"Usually, a Config determines how a run should behave. It is also possible to use configs, in","sidebar":"python"},"metaflow/configuring-flows/custom-parsers":{"id":"metaflow/configuring-flows/custom-parsers","title":"Custom Config Parsers","description":"The primary purpose of the parser argument in Config is to enable support for different configuration formats, as","sidebar":"python"},"metaflow/configuring-flows/introduction":{"id":"metaflow/configuring-flows/introduction","title":"Configuring Flows","description":"This is a new feature in Metaflow 2.13. Make sure you have a recent enough version of","sidebar":"python"},"metaflow/configuring-flows/parsing-configs":{"id":"metaflow/configuring-flows/parsing-configs","title":"Parsing Configs","description":"All the basic configuration examples we discussed relied on a single JSON file","sidebar":"python"},"metaflow/debugging":{"id":"metaflow/debugging","title":"Debugging Flows","description":"Metaflow wants to make debugging failed flows as painless as possible.","sidebar":"python"},"metaflow/introduction":{"id":"metaflow/introduction","title":"Developing with Metaflow","description":"Every project is a journey. Each stage of the journey presents different challenges and","sidebar":"python"},"metaflow/managing-flows/deployer":{"id":"metaflow/managing-flows/deployer","title":"Deploying Flows Programmatically","description":"Besides running flows via an API, you can deploy flows to","sidebar":"python"},"metaflow/managing-flows/introduction":{"id":"metaflow/managing-flows/introduction","title":"Managing Flows in Notebooks and Scripts","description":"This is a new feature in Metaflow 2.12. Make sure you have a recent enough version of","sidebar":"python"},"metaflow/managing-flows/notebook-runs":{"id":"metaflow/managing-flows/notebook-runs","title":"Running in a Notebook","description":"To execute a flow defined in a cell, just add a NBRunner one-liner","sidebar":"python"},"metaflow/managing-flows/runner":{"id":"metaflow/managing-flows/runner","title":"Running Flows Programmatically","description":"The Runner API allows you to start and manage Metaflow runs and other operations programmatically,","sidebar":"python"},"metaflow/visualizing-results/advanced-shareable-cards-with-card-templates":{"id":"metaflow/visualizing-results/advanced-shareable-cards-with-card-templates","title":"Advanced, Shareable Cards with Card Templates","description":"The built-in Card Components allow you to","sidebar":"python"},"metaflow/visualizing-results/dynamic-cards":{"id":"metaflow/visualizing-results/dynamic-cards","title":"Updating Cards During Task Execution","description":"[Updating, dynamic cards were introduced in Metaflow","sidebar":"python"},"metaflow/visualizing-results/easy-custom-reports-with-card-components":{"id":"metaflow/visualizing-results/easy-custom-reports-with-card-components","title":"Easy Custom Reports with Card Components","description":"Default Cards are useful during development when you need to quickly inspect artifacts","sidebar":"python"},"metaflow/visualizing-results/effortless-task-inspection-with-default-cards":{"id":"metaflow/visualizing-results/effortless-task-inspection-with-default-cards","title":"Effortless Task Inspection with Default Cards","description":"Metaflow comes with a built-in Default Card that shows all artifacts produced by a","sidebar":"python"},"metaflow/visualizing-results/README":{"id":"metaflow/visualizing-results/README","title":"Visualizing Results","description":"What if you want to share results of flows with human beings or inspect results by","sidebar":"python"},"production/coordinating-larger-metaflow-projects":{"id":"production/coordinating-larger-metaflow-projects","title":"Coordinating Larger Metaflow Projects","description":"This page applies equally to all [production","sidebar":"python"},"production/event-triggering/external-events":{"id":"production/event-triggering/external-events","title":"Triggering Flows Based on External Events","description":"You can configure flows","sidebar":"python"},"production/event-triggering/flow-events":{"id":"production/event-triggering/flow-events","title":"Triggering Flows Based on Other Flows","description":"Besides triggering flows based on external events, you can trigger a flow when","sidebar":"python"},"production/event-triggering/inspect-events":{"id":"production/event-triggering/inspect-events","title":"Inspecting Events","description":"Events provide an additional layer of observability in production systems. By","sidebar":"python"},"production/event-triggering/project-events":{"id":"production/event-triggering/project-events","title":"Deploying Variants of Event-Triggered Flows","description":"Consider this advanced scenario: You have deployed two flows [linked together","sidebar":"python"},"production/event-triggering/README":{"id":"production/event-triggering/README","title":"Connecting Flows via Events","description":"Real-world production systems are not islands. They are often tightly connected","sidebar":"python"},"production/introduction":{"id":"production/introduction","title":"Production Deployments","description":"What does production mean exactly? Surely the answer depends on who you ask and what","sidebar":"python"},"production/scheduling-metaflow-flows/introduction":{"id":"production/scheduling-metaflow-flows/introduction","title":"Scheduling Metaflow Flows","description":"While the run command is convenient during development, you can\'t keep executing it","sidebar":"python"},"production/scheduling-metaflow-flows/scheduling-with-airflow":{"id":"production/scheduling-metaflow-flows/scheduling-with-airflow","title":"Scheduling Metaflow Flows with Apache Airflow","description":"Apache Airflow is a popular open-source workflow","sidebar":"python"},"production/scheduling-metaflow-flows/scheduling-with-argo-workflows":{"id":"production/scheduling-metaflow-flows/scheduling-with-argo-workflows","title":"Scheduling Metaflow Flows with Argo Workflows","description":"Argo Workflows is a Kubernetes-native workflow","sidebar":"python"},"production/scheduling-metaflow-flows/scheduling-with-aws-step-functions":{"id":"production/scheduling-metaflow-flows/scheduling-with-aws-step-functions","title":"Scheduling Metaflow Flows with AWS Step Functions","description":"AWS Step Functions is a general-purpose","sidebar":"python"},"scaling/checkpoint/checkpoint-ml-libraries":{"id":"scaling/checkpoint/checkpoint-ml-libraries","title":"Checkpoints in ML/AI libraries","description":"Let\'s explore how @checkpoint works in a real-world scenario when checkpointing training progress with popular ML","sidebar":"python"},"scaling/checkpoint/introduction":{"id":"scaling/checkpoint/introduction","title":"Checkpointing Progress","description":"Metaflow artifacts are used to persist models, dataframes, and other Python objects upon task completion. They","sidebar":"python"},"scaling/checkpoint/selecting-checkpoints":{"id":"scaling/checkpoint/selecting-checkpoints","title":"Selecting a Checkpoint to Use","description":"By default, @checkpoint is scoped to a single task, allowing you to recover from a previous checkpoint using @retry.","sidebar":"python"},"scaling/data":{"id":"scaling/data","title":"Loading and Storing Data","description":"This chapter describes tools and patterns for moving data in and out of your Metaflow","sidebar":"python"},"scaling/dependencies/conda-vs-pypi":{"id":"scaling/dependencies/conda-vs-pypi","title":"Conda vs. PyPI","description":"[The Python package ecosystem can","sidebar":"python"},"scaling/dependencies/containers":{"id":"scaling/dependencies/containers","title":"Defining Custom Images","description":"All tasks executed remotely run in a container,","sidebar":"python"},"scaling/dependencies/faq":{"id":"scaling/dependencies/faq","title":"Dependencies FAQ","description":"Can I reuse environment created by Metaflow in another step or outside Metaflow?","sidebar":"python"},"scaling/dependencies/internals":{"id":"scaling/dependencies/internals","title":"Internals of Dependency Management","description":"Behind the scenes, Metaflow does much more than just wrapping CLI commands such as","sidebar":"python"},"scaling/dependencies/libraries":{"id":"scaling/dependencies/libraries","title":"Managing Libraries","description":"Whereas the previous page covered [packaging of your own Python modules and","sidebar":"python"},"scaling/dependencies/project-structure":{"id":"scaling/dependencies/project-structure","title":"Structuring Projects","description":"This page describes how to arrange files in your projects to","sidebar":"python"},"scaling/dependencies/README":{"id":"scaling/dependencies/README","title":"Managing Dependencies","description":"If you are in a hurry:","sidebar":"python"},"scaling/dependencies/uv":{"id":"scaling/dependencies/uv","title":"Using uv","description":"uv is a fast, modern Python package manager designed for creating reproducible environments with minimal overhead. In Metaflow, you can use projects managed by uv directly by","sidebar":"python"},"scaling/failures":{"id":"scaling/failures","title":"Dealing with Failures","description":"Failures are a natural, expected part of data science workflows. Here are some typical","sidebar":"python"},"scaling/introduction":{"id":"scaling/introduction","title":"Scalable Compute and Data","description":"After you have prototyped a flow locally and iterated with it","sidebar":"python"},"scaling/remote-tasks/aws-batch":{"id":"scaling/remote-tasks/aws-batch","title":"Using AWS Batch","description":"Here are some useful tips and tricks related to running Metaflow on AWS Batch. See our","sidebar":"python"},"scaling/remote-tasks/controlling-parallelism":{"id":"scaling/remote-tasks/controlling-parallelism","title":"Controlling Parallelism","description":"It is almost too easy to execute tasks remotely using Metaflow. Consider a foreach loop","sidebar":"python"},"scaling/remote-tasks/distributed-computing":{"id":"scaling/remote-tasks/distributed-computing","title":"Distributed Computing","description":"Metaflow\'s foreach construct allows you to run tasks concurrently.","sidebar":"python"},"scaling/remote-tasks/gpu-compute":{"id":"scaling/remote-tasks/gpu-compute","title":"Using GPUs and Other Accelerators","description":"Metaflow enables access to hardware-accelerated computing, GPUs in particular, when","sidebar":"python"},"scaling/remote-tasks/installing-drivers-and-frameworks":{"id":"scaling/remote-tasks/installing-drivers-and-frameworks","title":"Installing Drivers and Frameworks","description":"Paradoxically, often the hardest part of using an hardware accelerator is to get all the","sidebar":"python"},"scaling/remote-tasks/introduction":{"id":"scaling/remote-tasks/introduction","title":"Computing at Scale","description":"Metaflow makes it easy to run compute in the cloud. Instead of prescribing one paradigm for all","sidebar":"python"},"scaling/remote-tasks/kubernetes":{"id":"scaling/remote-tasks/kubernetes","title":"Using Kubernetes","description":"Here are some useful tips and tricks related to running Metaflow on Kubernetes. See our","sidebar":"python"},"scaling/remote-tasks/multicore":{"id":"scaling/remote-tasks/multicore","title":"Using Multiple CPU Cores","description":"When running locally, tasks are executed as separate processes. The operating system","sidebar":"python"},"scaling/remote-tasks/requesting-resources":{"id":"scaling/remote-tasks/requesting-resources","title":"Requesting Compute Resources","description":"You can run any Metaflow flow in the cloud simply by adding an option on the command line:","sidebar":"python"},"scaling/remote-tasks/spot-instances":{"id":"scaling/remote-tasks/spot-instances","title":"Using Spot Instances","description":"Metaflow supports running tasks on spot instances, which can significantly","sidebar":"python"},"scaling/secrets":{"id":"scaling/secrets","title":"Accessing Secrets","description":"If your flow needs to access an external service (e.g. a database) that requires","sidebar":"python"},"scaling/tagging":{"id":"scaling/tagging","title":"Organizing Results","description":"A boring, under-appreciated part of high-quality science (or any project work in","sidebar":"python"},"v/r/getting-started/development-environment":{"id":"v/r/getting-started/development-environment","title":"Development Environment","description":"You can install and use Metaflow easily within your favorite IDE, whether it is RStudio,","sidebar":"r"},"v/r/getting-started/install":{"id":"v/r/getting-started/install","title":"Installing Metaflow","description":"MacOS/Linux","sidebar":"r"},"v/r/getting-started/tutorials/README":{"id":"v/r/getting-started/tutorials/README","title":"Tutorials","description":"This set of tutorials provides a hands-on introduction to Metaflow. The basic concepts","sidebar":"r"},"v/r/getting-started/tutorials/season-1-the-local-experience/episode00":{"id":"v/r/getting-started/tutorials/season-1-the-local-experience/episode00","title":"Episode 0: Hello World","description":"Metaflow says Hi!","sidebar":"r"},"v/r/getting-started/tutorials/season-1-the-local-experience/episode01":{"id":"v/r/getting-started/tutorials/season-1-the-local-experience/episode01","title":"Episode 1: Playlist","description":"This flow loads a movie metadata CSV file and builds a playlist for your favorite movie","sidebar":"r"},"v/r/getting-started/tutorials/season-1-the-local-experience/episode02":{"id":"v/r/getting-started/tutorials/season-1-the-local-experience/episode02","title":"Episode 2: Statistics","description":"Use Metaflow to load the movie metadata CSV file into a data frame and compute some","sidebar":"r"},"v/r/getting-started/tutorials/season-1-the-local-experience/episode03":{"id":"v/r/getting-started/tutorials/season-1-the-local-experience/episode03","title":"Episode 3: Playlist Redux","description":"Use Metaflow to load the statistics generated from [Episode 2 Is this Data","sidebar":"r"},"v/r/getting-started/tutorials/season-1-the-local-experience/README":{"id":"v/r/getting-started/tutorials/season-1-the-local-experience/README","title":"Season 1: The Local Experience","description":"This season focuses on introducing the basics of Metaflow. You can run all these","sidebar":"r"},"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode04":{"id":"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode04","title":"Episode 4: Hello AWS","description":"This flow is a simple linear workflow that verifies your AWS configuration. The start","sidebar":"r"},"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode05":{"id":"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode05","title":"Episode 5: Statistics Redux","description":"This example revisits [Episode 02-statistics: Is this Data","sidebar":"r"},"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode06":{"id":"v/r/getting-started/tutorials/season-2-scaling-out-and-up/episode06","title":"Episode 6: Worldview","description":"This episode shows how you can use a notebook to set up a simple dashboard to monitor","sidebar":"r"},"v/r/getting-started/tutorials/season-2-scaling-out-and-up/README":{"id":"v/r/getting-started/tutorials/season-2-scaling-out-and-up/README","title":"Season 2: Scaling Out and Up","description":"This season introduces how to use Metaflow on AWS. To run through these tutorials, you","sidebar":"r"},"v/r/going-to-production-with-metaflow/scheduling-metaflow-flows":{"id":"v/r/going-to-production-with-metaflow/scheduling-metaflow-flows","title":"Scheduling Metaflow Flows","description":"A key feature of Metaflow is to make it easy to take machine learning pipelines from"},"v/r/introduction/contributing-to-metaflow":{"id":"v/r/introduction/contributing-to-metaflow","title":"Contributing to Metaflow","description":"First off, thanks for taking the time!","sidebar":"r"},"v/r/introduction/getting-in-touch":{"id":"v/r/introduction/getting-in-touch","title":"Get in Touch","description":"Thank you for your interest in Metaflow. We are here to help. The team is most active on","sidebar":"r"},"v/r/introduction/release-notes":{"id":"v/r/introduction/release-notes","title":"Release Notes","description":"Read below how Metaflow has improved over time.","sidebar":"r"},"v/r/introduction/roadmap":{"id":"v/r/introduction/roadmap","title":"Roadmap","description":"Metaflow has been used in production at Netflix since early 2018. The core Metaflow was"},"v/r/introduction/what-is-metaflow":{"id":"v/r/introduction/what-is-metaflow","title":"What is Metaflow","description":"Metaflow is a human-friendly library that helps scientists and engineers build and","sidebar":"r"},"v/r/introduction/why-metaflow":{"id":"v/r/introduction/why-metaflow","title":"Why Metaflow","description":"Here is a data scientist.","sidebar":"r"},"v/r/introduction/wip-contributing-to-metaflow":{"id":"v/r/introduction/wip-contributing-to-metaflow","title":"Contributing to Metaflow","description":"First off, thanks for taking the time!"},"v/r/metaflow-on-aws/deploy-to-aws":{"id":"v/r/metaflow-on-aws/deploy-to-aws","title":"Deploying to AWS","description":"See the Administrator\'s Guide to Metaflow"},"v/r/metaflow-on-aws/metaflow-on-aws":{"id":"v/r/metaflow-on-aws/metaflow-on-aws","title":"Metaflow on AWS","description":"Traditionally, there has been a tension between local \\\\(e.g. on a laptop\\\\) and remote"},"v/r/metaflow/basics":{"id":"v/r/metaflow/basics","title":"Basics of Metaflow","description":"This document introduces the basic concepts of Metaflow. If you are eager to try out"},"v/r/metaflow/client":{"id":"v/r/metaflow/client","title":"Inspecting Flows and Results","description":"Metaflow provides a client API that is used to inspect results of past runs. It is"},"v/r/metaflow/debugging":{"id":"v/r/metaflow/debugging","title":"Debugging with Metaflow","description":"Metaflow wants to make debugging failed flows as painless as possible."},"v/r/metaflow/failures":{"id":"v/r/metaflow/failures","title":"Dealing with Failures","description":"Failures are a natural, expected part of data science workflows. Here are some typical"},"v/r/metaflow/scaling":{"id":"v/r/metaflow/scaling","title":"Scaling Out and Up","description":"From a usability point of view, it is hard to beat the convenience of writing and"},"v/r/metaflow/tagging":{"id":"v/r/metaflow/tagging","title":"Organizing Results","description":"A boring, under-appreciated part of high-quality science \\\\(or any project work in"},"v/r/README":{"id":"v/r/README","title":"Welcome to Metaflow for R","description":"Build and manage real-life data science projects with ease.","sidebar":"r"},"v/r/SUMMARY":{"id":"v/r/SUMMARY","title":"Table of contents","description":"Metaflow for R is in maintenance mode. It doesn\'t support the latest features of"}}}')}}]);