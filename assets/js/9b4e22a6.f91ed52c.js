"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5365],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(h,r(r({ref:t},c),{},{components:n})):a.createElement(h,r({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2114:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const i={},r="Managing Dependencies",l={unversionedId:"scaling/dependencies/README",id:"scaling/dependencies/README",title:"Managing Dependencies",description:"If you are in a hurry:",source:"@site/docs/scaling/dependencies/README.md",sourceDirName:"scaling/dependencies",slug:"/scaling/dependencies/",permalink:"/scaling/dependencies/",draft:!1,editUrl:"https://github.dev/Netflix/metaflow-docs/blob/master/docs/scaling/dependencies/README.md",tags:[],version:"current",frontMatter:{},sidebar:"python",previous:{title:"Using AWS Batch",permalink:"/scaling/remote-tasks/aws-batch"},next:{title:"Structuring Projects",permalink:"/scaling/dependencies/project-structure"}},s={},p=[{value:"Unpacking a Metaflow project",id:"unpacking-a-metaflow-project",level:2},{value:"Packaging projects for remote execution",id:"packaging-projects-for-remote-execution",level:2},{value:"Which approach to use?",id:"which-approach-to-use",level:3}],c={toc:p};function d(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"managing-dependencies"},"Managing Dependencies"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If you are in a hurry:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"Want to use your own modules and packages in a flow?\nSee ",(0,o.kt)("a",{parentName:"li",href:"/scaling/dependencies/project-structure"},"Structuring Projects"),"."),(0,o.kt)("li",{parentName:"ul"},"Want to use a Python library in a flow? See ",(0,o.kt)("a",{parentName:"li",href:"/scaling/dependencies/libraries"},"Managing Libraries"),"."),(0,o.kt)("li",{parentName:"ul"},"Want to use ",(0,o.kt)("inlineCode",{parentName:"li"},"uv")," with Metaflow? See ",(0,o.kt)("a",{parentName:"li",href:"/scaling/dependencies/uv"},"using ",(0,o.kt)("inlineCode",{parentName:"a"},"uv"))),(0,o.kt)("li",{parentName:"ul"},"Want to use or build a specific Docker image?\nSee ",(0,o.kt)("a",{parentName:"li",href:"/scaling/dependencies/containers"},"Defining Custom Containers"),"."))),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"New in Metaflow 2.15.8: You can ",(0,o.kt)("a",{parentName:"p",href:"/scaling/dependencies/uv"},"use ",(0,o.kt)("inlineCode",{parentName:"a"},"uv")," to manage dependencies"),".")),(0,o.kt)("p",null,"A Metaflow flow is defined in a single Python file. Besides the flow code\nitself, a typical flow has many ",(0,o.kt)("em",{parentName:"p"},"software dependencies"),", that is, other\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.python.org/3/tutorial/modules.html"},"modules"),",\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.python.org/3/tutorial/modules.html#packages"},"packages"),",\nand 3rd party libraries like ",(0,o.kt)("inlineCode",{parentName:"p"},"pandas")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"pytorch")," of which the flow is composed."),(0,o.kt)("p",null,"While the question of dependency management may seem rather mundane, it is a\ncritically important part of production-quality projects for a number of\nreasons:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Flows need ",(0,o.kt)("strong",{parentName:"p"},"a stable execution environment"),". You don't want to get\nunexpected results because a package abruptly changed under the hood. Each\nproject may have its own set of dependencies that need to be isolated from\nothers.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"It should be possible to ",(0,o.kt)("strong",{parentName:"p"},"make flows reproducible"),". Anyone should be able\nto retrieve a flow, rerun it, and get similar results. To make this possible, a\nflow can't depend on libraries that are only available on your laptop.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/scaling/remote-tasks/requesting-resources"},"Remote execution of tasks"))," requires that\nall dependencies can be reinstantated on the fly in a remote environment.\nAgain, this is not possible if the flow depends on libraries that are only\navailable on your laptop."))),(0,o.kt)("p",null,"Metaflow includes robust but flexible machinery for managing dependencies. You can\nget started without hassle and harden the project gradually to provide it with a stable,\nreproducible execution environments."),(0,o.kt)("p",null,"Behind the scenes, Metaflow does much more than just ",(0,o.kt)("inlineCode",{parentName:"p"},"pip install"),"'ing packages\non the fly. If you are curious to learn what and why,\nsee ",(0,o.kt)("a",{parentName:"p",href:"/scaling/dependencies/internals"},"Packaging Internals")," and ",(0,o.kt)("a",{parentName:"p",href:"https://outerbounds.com/blog/pypi-announcement/"},"the ",(0,o.kt)("inlineCode",{parentName:"a"},"@pypi"),"\nannouncement blog post"),"."),(0,o.kt)("h2",{id:"unpacking-a-metaflow-project"},"Unpacking a Metaflow project"),(0,o.kt)("p",null,"Let's consider the layers that make up a Metaflow project:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Layers of dependencies",src:n(461).Z,width:"500",height:"452"})),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"A flow file, e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"flow.py")," ",(0,o.kt)("a",{parentName:"p",href:"/metaflow/basics"},"defines the flow DAG"),". The\nfile may contain arbitrary user-defined code, making it easy to get started\njust with a single file.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"As the project grows, it is convenient to ",(0,o.kt)("a",{parentName:"p",href:"/scaling/dependencies/project-structure"},"structure the project as multiple\nmodules and packages"),", instead of\nincluding hundreds of lines in a single file. Metaflow packages local Python\ndependencies like this automatically.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Crucially, Metaflow packages Metaflow itself for remote execution so that you\ndon't have to install it manually when\n",(0,o.kt)("a",{parentName:"p",href:"/scaling/remote-tasks/requesting-resources"},"using ",(0,o.kt)("inlineCode",{parentName:"a"},"@batch")," and ",(0,o.kt)("inlineCode",{parentName:"a"},"@kubernetes")),". Also, this\nguarantees that all tasks use the same version of Metaflow consistently.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"External libraries can be included via ",(0,o.kt)("a",{parentName:"p",href:"/scaling/dependencies/libraries"},"the ",(0,o.kt)("inlineCode",{parentName:"a"},"@pypi")," and ",(0,o.kt)("inlineCode",{parentName:"a"},"@conda"),"\ndecorators"),". ",(0,o.kt)("a",{parentName:"p",href:"/scaling/dependencies/internals"},"Behind the\nscenes"),", these decorators take care\nof dependency resolution, virtual environment creation, and package\nsnapshotting automatically.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Ultimately, all the code executes on top of an operating system which defines\nlow-level drivers and security functionality. If needed, much of this can be configured\nvia ",(0,o.kt)("a",{parentName:"p",href:"/scaling/dependencies/containers"},"a custom Docker image"),"."))),(0,o.kt)("p",null,"Note that you can ",(0,o.kt)("a",{parentName:"p",href:"/metaflow/introduction"},"get started with local development"),"\nwithout having to worry about any of this. Metaflow\nuses libraries you have installed locally like any other Python project.\nDependency management becomes relevant immediately when you want to start\n",(0,o.kt)("a",{parentName:"p",href:"/scaling/introduction"},"scaling out to the cloud")," or you want to\n",(0,o.kt)("a",{parentName:"p",href:"/production/introduction"},"deploy the flow in production"),"."),(0,o.kt)("h2",{id:"packaging-projects-for-remote-execution"},"Packaging projects for remote execution"),(0,o.kt)("p",null,"To execute tasks outside your local environment, Metaflow snapshots the layers\n1-3(dark blue) automatically and stores them in ",(0,o.kt)("em",{parentName:"p"},"a code package"),". You can\n",(0,o.kt)("a",{parentName:"p",href:"/api/client#metaflowcode"},"inspect the package through the Client API")," to see\nthe exact code that was executed by a run."),(0,o.kt)("p",null,"If you are curious, you can inspect the files that would be included in a code\npackage by executing"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"python myflow.py package list\n")),(0,o.kt)("p",null,"By the default, the package only includes local Python files, not libraries you\nhave installed e.g. with ",(0,o.kt)("inlineCode",{parentName:"p"},"pip install")," manually. To include external libraries,\nyou need to include them either in ",(0,o.kt)("a",{parentName:"p",href:"/scaling/dependencies/containers"},"a custom Docker\nimage"),", ",(0,o.kt)("a",{parentName:"p",href:"/scaling/dependencies/conda-vs-pypi"},"specify them in a ",(0,o.kt)("inlineCode",{parentName:"a"},"@pypi")," or ",(0,o.kt)("inlineCode",{parentName:"a"},"@conda"),"\ndecorator"),", or ",(0,o.kt)("a",{parentName:"p",href:"/scaling/dependencies/uv"},"use ",(0,o.kt)("inlineCode",{parentName:"a"},"uv")),"."),(0,o.kt)("p",null,"This figure illustrates the idea:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Remote dependencies",src:n(7257).Z,width:"1425",height:"741"})),(0,o.kt)("h3",{id:"which-approach-to-use"},"Which approach to use?"),(0,o.kt)("p",null,"Let's say your team has a common module ",(0,o.kt)("inlineCode",{parentName:"p"},"special_module.py")," that is used by\nmany flows. You could include it in any of the three layers. You could"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Include it next to ",(0,o.kt)("inlineCode",{parentName:"li"},"flow.py")," as a local dependency which Metaflow packages\nautomatically."),(0,o.kt)("li",{parentName:"ol"},"Publish it as a Python package and include it with ",(0,o.kt)("inlineCode",{parentName:"li"},"@pypi"),"."),(0,o.kt)("li",{parentName:"ol"},"Include it in a custom Docker image.")),(0,o.kt)("p",null,"Which approach to choose? There may be internal reasons to choose one approach\nover the others but if you are unusure, here's an easy rule of thumb: Prefer\nlocal files for any dependencies that need to change quickly."),(0,o.kt)("p",null,"If you need to change ",(0,o.kt)("inlineCode",{parentName:"p"},"special_module.py")," multiple times a day, the overhead of\nhaving to build new packages or Docker files for every change can be\noverwhelming. In contrast, if the file rarely changes, all the approaches work\nequally well."),(0,o.kt)("p",null,"The next page focuses on working with local files for rapid development."))}d.isMDXComponent=!0},7257:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/dependencies-remote-10a181f8142dcffcda6522ecc43a0e40.png"},461:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/dependencies-c3d939696aa7641db3e8a2d3541545ed.png"}}]);