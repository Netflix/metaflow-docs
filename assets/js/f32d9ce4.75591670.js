"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[904],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>u});var o=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=o.createContext({}),l=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=l(r),u=a,m=f["".concat(c,".").concat(u)]||f[u]||d[u]||n;return r?o.createElement(m,i(i({ref:t},p),{},{components:r})):o.createElement(m,i({ref:t},p))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,i=new Array(n);i[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<n;l++)i[l]=r[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}f.displayName="MDXCreateElement"},914:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>g,frontMatter:()=>n,metadata:()=>s,toc:()=>l});var o=r(7462),a=(r(7294),r(3905));const n={},i="@conda_base",s={unversionedId:"api/flow-decorators/conda_base",id:"api/flow-decorators/conda_base",title:"@conda_base",description:"The @conda_base decorator specifies what libraries should be made available for all steps of a flow.",source:"@site/docs/api/flow-decorators/conda_base.md",sourceDirName:"api/flow-decorators",slug:"/api/flow-decorators/conda_base",permalink:"/api/flow-decorators/conda_base",draft:!1,editUrl:"https://github.dev/Netflix/metaflow-docs/blob/master/docs/api/flow-decorators/conda_base.md",tags:[],version:"current",frontMatter:{},sidebar:"python",previous:{title:"Flow Decorators",permalink:"/api/flow-decorators/"},next:{title:"@project",permalink:"/api/flow-decorators/project"}},c={},l=[],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},d=p("DocSection"),f=p("SigArgSection"),u=p("SigArg"),m=p("Description"),b=p("ParamSection"),y=p("Parameter"),h={toc:l};function g(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,o.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"conda_base"},"@conda_base"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"@conda_base")," decorator specifies what libraries should be made available for all steps of a flow."),(0,a.kt)("p",null,"The libraries are installed from ",(0,a.kt)("a",{parentName:"p",href:"https://anaconda.org/"},"Conda repositories"),". For more information, see ",(0,a.kt)("a",{parentName:"p",href:"/scaling/dependencies"},"Managing External Libraries"),"."),(0,a.kt)(d,{type:"decorator",name:"conda_base",module:"metaflow",show_import:"True",heading_level:"3",link:"https://github.com/Netflix/metaflow/tree/master/metaflow/plugins/pypi/conda_decorator.py#L270",mdxType:"DocSection"},(0,a.kt)(f,{mdxType:"SigArgSection"},(0,a.kt)(u,{name:"...",mdxType:"SigArg"})),(0,a.kt)(m,{summary:"Specifies the Conda environment for all steps of the flow.",extended_summary:"Use `@conda_base` to set common libraries required by all\\nsteps and use `@conda` to specify step-specific additions.",mdxType:"Description"}),(0,a.kt)(b,{name:"Parameters",mdxType:"ParamSection"},(0,a.kt)(y,{name:"packages",type:"Dict[str, str], default {}",desc:"Packages to use for this flow. The key is the name of the package\\nand the value is the version to use.",mdxType:"Parameter"}),(0,a.kt)(y,{name:"libraries",type:"Dict[str, str], default {}",desc:"Supported for backward compatibility. When used with packages, packages will take precedence.",mdxType:"Parameter"}),(0,a.kt)(y,{name:"python",type:"str, optional, default None",desc:"Version of Python to use, e.g. '3.7.4'. A default value of None implies\\nthat the version used will correspond to the version of the Python interpreter used to start the run.",mdxType:"Parameter"}),(0,a.kt)(y,{name:"disabled",type:"bool, default False",desc:"If set to True, disables Conda.",mdxType:"Parameter"}))))}g.isMDXComponent=!0}}]);