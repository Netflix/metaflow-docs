"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8895],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),p=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,f=u["".concat(c,".").concat(m)]||u[m]||l[m]||o;return r?a.createElement(f,i(i({ref:t},d),{},{components:r})):a.createElement(f,i({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},9420:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const o={},i="@conda",s={unversionedId:"api/step-decorators/conda",id:"api/step-decorators/conda",title:"@conda",description:"The @conda decorator specifies what libraries should be made available for a step.",source:"@site/docs/api/step-decorators/conda.md",sourceDirName:"api/step-decorators",slug:"/api/step-decorators/conda",permalink:"/api/step-decorators/conda",draft:!1,editUrl:"https://github.dev/Netflix/metaflow-docs/blob/master/docs/api/step-decorators/conda.md",tags:[],version:"current",frontMatter:{},sidebar:"python",previous:{title:"@catch",permalink:"/api/step-decorators/catch"},next:{title:"@pypi",permalink:"/api/step-decorators/pypi"}},c={},p=[],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)},l=d("DocSection"),u=d("SigArgSection"),m=d("SigArg"),f=d("Description"),y=d("ParamSection"),h=d("Parameter"),b={toc:p};function g(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},b,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"conda"},"@conda"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"@conda")," decorator specifies what libraries should be made available for a step."),(0,n.kt)("p",null,"The libraries are installed from ",(0,n.kt)("a",{parentName:"p",href:"https://anaconda.org/"},"Conda repositories"),". For more information, see ",(0,n.kt)("a",{parentName:"p",href:"/scaling/dependencies"},"Managing External Libraries"),"."),(0,n.kt)(l,{type:"decorator",name:"conda",module:"metaflow",show_import:"True",heading_level:"3",link:"https://github.com/Netflix/metaflow/tree/master/metaflow/plugins/pypi/conda_decorator.py#L18",mdxType:"DocSection"},(0,n.kt)(u,{mdxType:"SigArgSection"},(0,n.kt)(m,{name:"...",mdxType:"SigArg"})),(0,n.kt)(f,{summary:"Specifies the Conda environment for the step.",extended_summary:"Information in this decorator will augment any\\nattributes set in the `@conda_base` flow-level decorator. Hence,\\nyou can use `@conda_base` to set packages required by all\\nsteps and use `@conda` to specify step-specific overrides.",mdxType:"Description"}),(0,n.kt)(y,{name:"Parameters",mdxType:"ParamSection"},(0,n.kt)(h,{name:"packages",type:"Dict[str, str], default {}",desc:"Packages to use for this step. The key is the name of the package\\nand the value is the version to use.",mdxType:"Parameter"}),(0,n.kt)(h,{name:"libraries",type:"Dict[str, str], default {}",desc:"Supported for backward compatibility. When used with packages, packages will take precedence.",mdxType:"Parameter"}),(0,n.kt)(h,{name:"python",type:"str, optional, default None",desc:"Version of Python to use, e.g. '3.7.4'. A default value of None implies\\nthat the version used will correspond to the version of the Python interpreter used to start the run.",mdxType:"Parameter"}),(0,n.kt)(h,{name:"disabled",type:"bool, default False",desc:"If set to True, disables @conda.",mdxType:"Parameter"}))))}g.isMDXComponent=!0}}]);